# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:r1 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '10.0.0.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r1-r2"},
                   {ip: '10.10.0.1', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r1-r3"},
                ]
  },
:r2 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '10.0.0.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r1-r2"},
                   {ip: '10.20.0.2', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r2-r3"},
                   {ip: '172.30.0.1', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "r2-r4"},
                ]
  },
:r3 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '10.10.0.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r1-r3"},
                   {ip: '10.20.0.1', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "r2-r3"},
                ]
  },
:r4 => {
        :box_name => "centos/7",
        :net => [
                   {ip: '172.30.0.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "r1-r2"},
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "256"]
        end

        box.vm.box = boxconfig[:box_name]

        box.vm.host_name = boxname.to_s

        #box.vm.network "private_network", ip: boxconfig[:ip_addr]

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
#          sysctl -w net.ipv4.ip_forward=1
#          echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
#          echo "net.ipv4.conf.eth*.rp_filter = 0" >> /etc/sysctl.conf
#          sysctl -p /etc/sysctl.conf
#          yum install -y quagga
#          cp /usr/share/doc/quagga-0.99.22.4/zebra.conf.sample /etc/quagga/zebra.conf
#          systemctl enable zebra.service
#          systemctl start zebra.service
#          cp /usr/share/doc/quagga-0.99.22.4/ospfd.conf.sample /etc/quagga/ospfd.conf
#          chown quagga:quaggavt /etc/quagga/ospfd.conf
#          systemctl enable ospfd.service
#          systemctl start ospfd.service
        SHELL

        case boxname.to_s
        when "r1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            SHELL
        when "r2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            SHELL
        when "r3"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
          SHELL
        when "r4"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
          SHELL
        end
      end

  end
 config.vm.provision "ansible" do |ansible|
 ansible.verbose = "vvv"
 ansible.playbook = "provisioning/playbook.yml"
 ansible.become = "true"
 end
end
